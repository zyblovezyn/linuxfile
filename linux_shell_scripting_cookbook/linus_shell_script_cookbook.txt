将文件重定向到命令 cmd<file
arg.txt has:
arg1
arg2
arg3

cat arg.txt | (while read arg;do echo $arg;done) --output:
arg1
arg2
arg3

cat arg.txt | xargs -I {} echo {} --output:
arg1
arg2
arg3

tr -- translate 转换

-- 大写转化成小写
echo "HELLO WHO IS THIS" | tr 'A-Z' 'a-z' output:hello who is this
-- 删除字符 使用-d 选项
echo "Hello 123 world 456" | tr -d '0-9' output:hello world
-- 把 不在补集中的字符全不删除
echo hello 1 character 2 net 4 | tr -d -c '0-9\n' output:1 2 4
-- 压缩空白字符
echo "GUN     is   the   " | tr -s ' '
-- 求和
sum.txt has:
1
2
3
4
5
cat sun.txt | echo $[ $(tr '\n' '+') 0 ] -- output:15

alnum:字母和数字
alpha:字母
cntrl:控制(非打印)字符、
digit:数字
graph:图形
lower:小写字母
upper:大写字母
print:可打印字符
punct:标点符号
space:空白字符
xdigit:十六进制字符

sort -n filename 对文件按数字排序
sort -r filename 对文件按数字排序,逆序
sort -C filename 检测文件是否已经排序
#/bin/bash
if [ $? -eq 0 ];then
	echo Sorted
else
	echo Unsorted
fi

sort -m sorted1 sorted2 合并排序过的文件，对新文件不再排序

sort -k n data.txt 依据第n列进行排序
sort -k n,m data.txt 按第n到第m字符进行排序
sort -u data.txt 只显示唯一的行
sort unsorted.txt | uniq -d 找出文件中重复的行
sort data.txt | uniq -s 2 -w 2 比较时跳过2个字符,比较宽度为2

linux中/tmp的文件会在系统重启后清空
temp_file='/tmp/file-$RANDOM' $RANDOM返回一个随机数
temp_file='/tmp/var.$$' $$是当前运行脚本的进程ID



